<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Leyla's Blog]]></title>
  <link href="http://leylaKapi.github.io/atom.xml" rel="self"/>
  <link href="http://leylaKapi.github.io/"/>
  <updated>2014-04-24T00:50:05+03:00</updated>
  <id>http://leylaKapi.github.io/</id>
  <author>
    <name><![CDATA[Leyla Kapi]]></name>
    <email><![CDATA[leylakapi@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ruby on Rails MVC]]></title>
    <link href="http://leylaKapi.github.io/blog/2014/04/24/ruby-on-rails-mvc/"/>
    <updated>2014-04-24T00:25:52+03:00</updated>
    <id>http://leylaKapi.github.io/blog/2014/04/24/ruby-on-rails-mvc</id>
    <content type="html"><![CDATA[<h3>MVC in Ruby on Rails</h3>

<p>MVC &ndash; model, view, controller</p>

<p>MVC provide to separated of coding and design in app. This property provide to easiness for programmer.</p>

<ul>
<li><p>M &ndash; Model => Objects, Object-oriented, data, database</p></li>
<li><p>V &ndash; View => Presentations layer user section, HTML, CSS, javascript &hellip;</p></li>
<li><p>C &ndash; Controller => Process of respond user action, walk change model on the view make decision.</p></li>
</ul>


<p>Basic web architecture</p>

<pre><code>Browser &lt;=&gt; Pages &lt;=&gt; Databases
</code></pre>

<p>Another web architecture</p>

<p><img src="./images/index.jpeg" title="MVC architecture" alt="mvc architecture" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup Rubymine]]></title>
    <link href="http://leylaKapi.github.io/blog/2014/04/23/setup-rubymine/"/>
    <updated>2014-04-23T23:59:28+03:00</updated>
    <id>http://leylaKapi.github.io/blog/2014/04/23/setup-rubymine</id>
    <content type="html"><![CDATA[<h3>How I can set up RubyMine for my Ubuntu Desktop ?</h3>

<ul>
<li>Firstly, You can install rubymine on <a href="http://www.jetbrains.com/ruby/download/">RubyMine</a></li>
</ul>


<p>Then, open your terminal</p>

<pre><code>CTRL + ALT + T
</code></pre>

<p>Then, go to Download file then extract from <em>.tar.gz</em> file to normal directory. Then write in terminal</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd </span>Downloads/RubyMine-6.3/bin/
</span><span class='line'>./rubymine.sh
</span></code></pre></td></tr></table></div></figure>


<p>Then, Rubymine opens automatically.</p>

<p>That&rsquo;s all.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How is the internet working and what is the protocols]]></title>
    <link href="http://leylaKapi.github.io/blog/2014/04/20/how-is-the-internet-working-and-what-is-the-protocols/"/>
    <updated>2014-04-20T02:00:37+03:00</updated>
    <id>http://leylaKapi.github.io/blog/2014/04/20/how-is-the-internet-working-and-what-is-the-protocols</id>
    <content type="html"><![CDATA[<h3>How is the internet working ?</h3>

<p>Internet like in real life, There are two sides for internet communication. While one of this is making request, another of this
have to respond to this request. This loop is named</p>

<pre><code>request - respond
</code></pre>

<p>or</p>

<pre><code>client-server
</code></pre>

<p>Web relation client &ndash; server</p>

<p><strong>client</strong> => <strong>server</strong></p>

<pre><code>     request
</code></pre>

<p><strong>client</strong> &lt;= <strong>server</strong></p>

<pre><code>     respond
</code></pre>

<p>Now, I try to explain when it occur this relation, Which process do occur?</p>

<ul>
<li><p>This process can be with protocols, protocols What?</p>

<ul>
<li>Protocols, like rules, this means that ; there are rules for connection two computer(client-server) each other to
internet.This rules are named protocols.</li>
</ul>
</li>
<li><p>There are many type of Protocols like HTTP(Hyper Text Transfer Protocols), TCP(Transmission Control Protocols),
UDP(User Dtagram Protocol), SSL(Secure Socket Layer), TLS(Transport Layer Security),FTP(File Transfer Protocols) &hellip;etc.</p>

<p>I try to explain several of the above protocols.</p></li>
<li><p>HTTP (Hyper Text Transfer Protocol)</p></li>
</ul>


<p>HTTP is which distribute in a source, which access to everyone for apply to hyper information system like text, graphics, video ..etc
In brief HTTP is a set of rules.
Also The means of name that, When we transferring text using this protocols.</p>

<p>In World using the default port number, showing like this <em>:80</em> . When we write url, automatically added to ending of URL,but it
is hidden.</p>

<ul>
<li>TCP (Transmission Control Protocol)</li>
</ul>


<p>TCP provide to security of data exchange. The clients create a contact with each other, in this contact provide to data exchange
and data transmitted in the correct order. Then TCP controlled to data whether it has reached by sending a message.
 It is very slow, because controlled data step by step.</p>

<ul>
<li>UDP (User Datagram Protocol)</li>
</ul>


<p>UDP is fast transmission data according to TCP but unsafe data . The aim is fast. If we compare with TCP. TCP and UDP similar
but TCP is very slow. If sending <em>.rar</em> or <em>.zip</em> files, should use TCP because data is important. if you send to video,
should use UDP because fast is important.</p>

<ul>
<li>SSL (Secure Socket Layer)</li>
</ul>


<p>SSl development for provide secuirty and privacy of transmission data on network. In SSL, before sending to information
encrypted, only decrypted by computer which receiver. This provide privacy data exchange.</p>

<pre><code>https  # 's' means that security .
</code></pre>

<ul>
<li>TLS (Transport Layer Security)</li>
</ul>


<p>TLS similar to SSL. Differences to SSL is that, process of connection occur simple and without encryption, when data transmission can be done,
security certificate engaged and then can be security.</p>

<ul>
<li><p>URL (Uniform Resources Locator)</p>

<p> access_method//:server_name[:port]/site</p></li>
</ul>


<p>I hope this article help you for understanding internet works</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Recreate Octopress blog for another computer]]></title>
    <link href="http://leylaKapi.github.io/blog/2014/04/19/recreate-octopress-blog-for-another-computer/"/>
    <updated>2014-04-19T22:13:18+03:00</updated>
    <id>http://leylaKapi.github.io/blog/2014/04/19/recreate-octopress-blog-for-another-computer</id>
    <content type="html"><![CDATA[<h3>How I recreate octopress blog another computer ?</h3>

<p>I formatted my computer and then for my octopress blog <em>What can I do ?</em> <strong>reinstall</strong> or <strong>WHAT?</strong></p>

<p>In this post I try to explain, if you have a new computer (after format, buy new computer&hellip;etc)but you have octopress blog
how to entegrated each other?</p>

<p>Before starting explain it in this article, I try to explain set up octopress, if you forget this, you can find it easily in another
blog post or you can look at <a href="http://octopress.org/docs/setup/">Octopress Setup guide</a> .</p>

<p>Now recreate a local repo for octopress</p>

<p>-Clone your blog to the new machine</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone -b source git@github.com:username/username.github.io.git octopress</span></code></pre></td></tr></table></div></figure>


<p>Then clone the master branch to the _deploy</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd </span>octopress
</span><span class='line'>git clone git@github.com:username/username.github.io.git _deploy
</span></code></pre></td></tr></table></div></figure>


<p>then run <em>rake</em></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gem install bundler
</span><span class='line'>rbenv rehash
</span><span class='line'>bundle install
</span><span class='line'>rake setup_github_pages
</span></code></pre></td></tr></table></div></figure>


<p>Then we ask to you repo url like</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Enter the <span class="nb">read</span>/write url <span class="k">for </span>your repository
</span><span class='line'><span class="o">(</span>For example, <span class="s1">&#39;git@github.com:your_username/your_username.github.io.git)</span>
</span><span class='line'><span class="s1">           or &#39;</span>https://github.com/your_username/your_username.github.io<span class="err">&#39;</span><span class="o">)</span>
</span><span class='line'>Repository url:
</span></code></pre></td></tr></table></div></figure>


<p>Write your like this <em>Repository url: git@github.com:username/username.github.io.git</em></p>

<p>Then you should write these command :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rake generate
</span><span class='line'>git add .
</span><span class='line'>git commit -m <span class="s2">&quot;Write comment here&quot;</span>
</span><span class='line'>git push origin <span class="nb">source</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>rake deploy
</span></code></pre></td></tr></table></div></figure>


<p>then you can write</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd </span>octopress
</span><span class='line'>git pull origin <span class="nb">source</span> <span class="c">#get another computer changing</span>
</span><span class='line'><span class="nb">cd</span> ./_deploy
</span><span class='line'>git pull origin master
</span></code></pre></td></tr></table></div></figure>


<p>then you can write</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rake deploy
</span></code></pre></td></tr></table></div></figure>


<p>That&rsquo;s all :)
I hope this article help you.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby Programming languages]]></title>
    <link href="http://leylaKapi.github.io/blog/2014/04/19/ruby-programming-languages/"/>
    <updated>2014-04-19T10:52:45+03:00</updated>
    <id>http://leylaKapi.github.io/blog/2014/04/19/ruby-programming-languages</id>
    <content type="html"><![CDATA[<h1>AB2014 &ndash; Ruby101 for beginners</h1>

<ul>
<li><a href="https://ruby-lang.org">Ruby-lang</a></li>
<li><a href="https://nitrous.io">Nitrous</a></li>
</ul>


<p><em>These notes restored in Academic Information Education Mersin from Notes of <strong>Mr. Sıtkı Bagdat</strong> .</em></p>

<h2>Ruby is a programming languages</h2>

<ul>
<li>Ruby, readable high level a programming languages.</li>
<li>Started to developt at 1993 and published at 1995.</li>
<li>In 2013 for Ruby was selected brightest year,the reason is that in this year, two version was developt Ruby-2.0 and Ruby-2.1.</li>
<li>Ruby, entegration with Rails in 2004.Then we start to use Ruby on Rails in web development.</li>
<li>Ruby developt by Japon Yukihirato  Matsumoto (Matz).</li>
<li>Ruby is completely object-oriented. (With a few exceptions)</li>
<li>Unlike another programming languages, ruby is interpreter languages. This means that, when we developt programm with ruby if can find a bug, Ruby running until bug&rsquo;s line.</li>
<li>Included dynamic typing. This means that, we goes easily from a type to another type, not necessary to pre-definition.</li>
<li>Ruby included package managers. (<a href="https://rubygems.org">RubyGems</a>)</li>
<li>Ruby provide to development to Ruby on Rails and Sinatra .</li>
</ul>


<p><strong>also</strong></p>

<ul>
<li>Metaprogramming (Coding write code.)</li>
<li>DSL (Domain Specific Language)</li>
<li>DRY (Don&rsquo;t repeat yourself)</li>
<li>TIMTOWTDI (There is more than one way to do it)</li>
</ul>


<h2>Ruby.philosopy[]</h2>

<ul>
<li><strong>Ruby.philosopy[1] </strong></li>
</ul>


<p>Ruby is, stronger than Perl, more object-oriented than Phyton, script languages.</p>

<blockquote><p>Perl + Smalltalk + Phyton + Lisp + Ada + &hellip; = Ruby</p></blockquote>

<ul>
<li><strong>Ruby.philosopy[2]</strong></li>
</ul>


<p>Ruby like a human body, seemingly simple but there are a complex structure inside.</p>

<ul>
<li><strong>Ruby.philosopy[3]</strong></li>
</ul>


<p>The aim is, When we coding a programming, coding should provide to express simple and readable.</p>

<h2>Irb ve Repl Functions</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>irb
</span><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:001:0&gt; 2+2
</span><span class='line'><span class="o">=</span>&gt; 4
</span><span class='line'><span class="nb">exit</span>
</span><span class='line'>irb --simple -prompt
</span><span class='line'>&gt;&gt; 12.class
</span><span class='line'><span class="o">=</span>&gt; Fixnum
</span><span class='line'>&gt;&gt; <span class="nb">exit</span>
</span><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:003:0&gt; 2*9/3+7
</span><span class='line'><span class="o">=</span>&gt; 13
</span><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:004:0&gt; _ * <span class="nv">3</span>
</span><span class='line'><span class="o">=</span>&gt;39
</span></code></pre></td></tr></table></div></figure>


<p>Acoording to above <em>irb</em>, opened ruby terminal; <em>exit</em> exit to ruby terminal. In addition <em>irb &mdash;simple -prompt</em> this command is provide to seeming regular to terminal.Strikes the eye another notifications is that</p>

<p><em>_</em></p>

<p>this sign provide to take pre-functions and then make process with this functions.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>system<span class="o">(</span><span class="s1">&#39;clear&#39;</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>with this command provide to clear your terminal.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:008:0&gt; <span class="nv">self</span>
</span><span class='line'><span class="o">=</span>&gt; main
</span></code></pre></td></tr></table></div></figure>


<p>this command show the writing on main class .</p>

<p><strong>Also</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:010:0&gt; <span class="nv">a</span><span class="o">=</span><span class="s2">&quot;Ruby&quot;</span>
</span><span class='line'><span class="o">=</span>&gt; <span class="s2">&quot;Ruby&quot;</span>
</span><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:011:0&gt; a.reverse
</span><span class='line'><span class="o">=</span>&gt; <span class="s2">&quot;ybuR&quot;</span>
</span><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:012:0&gt; <span class="s2">&quot;I love</span>
</span><span class='line'><span class="s2">irb(main):013:0&quot;</span> ruby<span class="s2">&quot;</span>
</span><span class='line'><span class="s2">=&gt;  &quot;</span>I love<span class="se">\n</span>ruby
</span></code></pre></td></tr></table></div></figure>


<p>Seeming to above code <em>.reverse</em> method which entered code, provide to writing reverse.Also if when opened quotes then not closed, <strong>></strong> instead <strong>&ldquo;</strong> can be this expression.</p>

<h2>Logical expressions</h2>

<ul>
<li>False or nil,  acceptable false.</li>
<li>Except false ve nil, everything acceptable true, like 0, [], &hellip;</li>
<li>Like another languages, when we make comparisons &lt;,>, ==,! using this expressions.</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:001:0 3 &gt; <span class="nv">5</span>
</span><span class='line'><span class="o">=</span>&gt; <span class="nb">false</span>
</span><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:002:0 3 &lt; <span class="nv">5</span>
</span><span class='line'><span class="o">=</span>&gt; <span class="nb">true</span>
</span><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:003:0 <span class="nv">3</span> <span class="o">==</span> <span class="nv">5</span>
</span><span class='line'><span class="o">=</span>&gt; <span class="nb">false</span>
</span><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:004:0 !13
</span><span class='line'><span class="o">=</span>&gt; <span class="nb">false</span>
</span><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:005:0 true.class
</span><span class='line'><span class="o">=</span>&gt; TrueClass
</span><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:006:0 false.class
</span><span class='line'><span class="o">=</span>&gt; FalseClass
</span><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:007:0 nil.class
</span><span class='line'><span class="o">=</span>&gt; NilClass
</span></code></pre></td></tr></table></div></figure>


<p>We mention to everthing an object and derivation from a class in Ruby, strike to eye above, <em>True</em>, <em>false</em> , <em>nil</em> derivation a class.
Also we mention about <em>nil</em>, nil means that <em>nothing</em> like another languages null, undefined&hellip;etc.
In ruby, Not exist relevant to logical expression like <em>Boolean</em> or <em>Bool</em> classes. Also While we are using to logical expression, using like <em>&amp;&amp;, ||, ! (and, or, not)</em> expression.</p>

<h2>Meeting to Methods</h2>

<ul>
<li>Defining to method start <strong>def</strong>, and ending with <strong>end</strong>.</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">method_name</span>
</span><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>If method get a parameter like :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">method_name</span><span class="p">(</span><span class="n">param1</span><span class="p">)</span>
</span><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">method_name</span><span class="p">(</span><span class="n">param1</span><span class="p">,</span> <span class="n">param2</span><span class="p">)</span>
</span><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Also</strong> Not required to using parenthesis like :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">method_name</span> <span class="n">param1</span><span class="p">,</span> <span class="n">param2</span><span class="p">,</span> <span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">collection</span> <span class="n">number1</span><span class="p">,</span> <span class="n">number2</span>
</span><span class='line'>    <span class="n">number1</span> <span class="o">+</span> <span class="n">number2</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Result of collection: &quot;</span><span class="p">,</span> <span class="n">collection</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>The above codes writing in <em>.rb</em> file and then save it, then open your terminal , writing path of files in terminal</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">ruby</span> <span class="n">project_name</span>
</span></code></pre></td></tr></table></div></figure>


<p>write above command in terminal.</p>

<p>In Above code, defining <em>collect method</em> for collection two number and make collection process then show in terminal.</p>

<ul>
<li>Method name, ending with <strong>?, ! or =</strong> ,this characters have special meaning.</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">questioning?</span>    <span class="c1">#return true or false</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">changed_value</span> <span class="o">=</span> <span class="o">.</span><span class="n">.</span><span class="o">.</span>   <span class="c1">#changed value of anything value, assignment operator.</span>
</span></code></pre></td></tr></table></div></figure>


<p>danger!    #changed original text.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">***</span>
</span></code></pre></td></tr></table></div></figure>


<p>bash
irb(main):001:0> a=&ldquo;Ruby&rdquo;
=> &ldquo;Ruby&rdquo;
irb(main):002:0> a.reverse
=> &ldquo;ybuR&rdquo;
irb(main):003:0> a
=> &ldquo;Ruby&rdquo;</p>

<blockquote><blockquote><p>exit
irb(main):004:0> a.reverse!
=>  &ldquo;ybuR&rdquo;
irb(main):005:0> a
=>  &ldquo;ybuR&rdquo;</p></blockquote></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">In</span> <span class="n">above</span> <span class="n">example</span> <span class="n">entering</span> <span class="n">a</span> <span class="n">value</span> <span class="ow">and</span> <span class="n">using</span> <span class="o">**!**</span> <span class="n">character</span> <span class="n">changed</span> <span class="n">original</span> <span class="n">value</span><span class="o">.</span>
</span><span class='line'>
</span><span class='line'><span class="c1">##Rules for named</span>
</span><span class='line'>
</span><span class='line'><span class="o">-</span> <span class="n">class</span><span class="p">,</span> <span class="k">module</span> <span class="nn">and</span> <span class="n">constant</span> <span class="nb">name</span> <span class="n">starts</span> <span class="n">with</span> <span class="n">capital</span> <span class="n">letter</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>ruby
class ClassName
&hellip;
end
module ModuleName
&hellip;
end
PI_CONSTANT = 3,14156</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">must</span> <span class="n">be</span> <span class="n">defined</span> <span class="n">like</span> <span class="n">above</span><span class="o">.</span> <span class="no">Also</span> <span class="n">you</span> <span class="n">know</span> <span class="nb">constants</span> <span class="n">doesn</span><span class="err">&#39;</span><span class="n">t</span> <span class="n">change</span><span class="p">,</span> <span class="k">if</span> <span class="n">you</span> <span class="n">want</span> <span class="n">to</span> <span class="n">change</span> <span class="n">can</span> <span class="n">be</span> <span class="n">bug</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>bash
irb(main):001:0> PI_CONSTANT = 3,14156
=> [3,14156]
irb(main):002:0> PI_CONSTANT  = 2
(irb):47: warning: already initialized constant PI_CONSTANT
(irb):46: warning: previous definition of PI_CONSTANT  was here
=> 2</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">-</span> <span class="o">**</span><span class="n">local</span> <span class="n">variables</span><span class="o">**</span> <span class="n">starting</span> <span class="n">with</span> <span class="n">lover</span> <span class="n">letter</span> <span class="ow">or</span> <span class="s1">&#39;_&#39;</span> <span class="p">,</span> <span class="n">like</span> <span class="p">:</span>
</span></code></pre></td></tr></table></div></figure>


<p>ruby
local_variable = &ldquo;like this.&rdquo;
plate = 20</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">-</span> <span class="o">**</span><span class="no">Global</span> <span class="n">variables</span><span class="o">**</span>  <span class="n">starting</span> <span class="n">with</span> <span class="s1">&#39;$&#39;</span><span class="p">,</span> <span class="n">like</span> <span class="p">:</span>
</span></code></pre></td></tr></table></div></figure>


<p>$global_variables</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">-</span> <span class="o">**</span><span class="n">instance</span> <span class="n">variables</span><span class="o">**</span> <span class="n">starting</span> <span class="n">with</span> <span class="s1">&#39;@&#39;</span> <span class="ow">and</span> <span class="k">class</span> <span class="n">variables</span> <span class="n">starting</span> <span class="n">with</span> <span class="s1">&#39;@@&#39;</span><span class="o">.</span> <span class="n">like</span> <span class="p">:</span>
</span></code></pre></td></tr></table></div></figure>


<p>@instance_variables</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="sb">```</span>
</span><span class='line'><span class="sb">@@class_variables</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Also</strong> you can writing ruby, without opening <em>irb</em> in terminal. like:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">ruby</span> <span class="o">-</span><span class="n">e</span> <span class="s2">&quot;puts &#39;Hello&#39;&quot;</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="no">Hello</span>
</span></code></pre></td></tr></table></div></figure>


<p>But the above method is not a preferred method commonly.</p>

<hr />

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">changed</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
</span><span class='line'>    <span class="n">variables</span> <span class="o">=</span> <span class="n">value</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Value of variables: </span><span class="si">#{</span><span class="n">changed</span><span class="p">(</span><span class="mi">20</span><span class="p">)</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="no">Value</span> <span class="n">of</span> <span class="ss">variables</span><span class="p">:</span> <span class="mi">20</span>
</span></code></pre></td></tr></table></div></figure>


<h2>included another file in your file.</h2>

<p><strong>external_file.rb</strong> can be ruby file like this.Also can be we are currently working on <strong>calıstıgımız_dosya.rb</strong>.</p>

<p>If we want to embeded in  <strong>external_file.rb</strong> files on <strong>currently_working_file.rb</strong> files, we should use <em>load</em> comand. like :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">external_file</span><span class="o">.</span><span class="n">rb</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">currently_working_file</span><span class="o">.</span><span class="n">rb</span>
</span><span class='line'><span class="nb">load</span> <span class="s1">&#39;external_file.rb&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>In Rails, we can generally use <em>autoload</em> command. <em>autoload</em> is loading automatically file.</p>

<p>Instead of <em>load</em> command, you can use <em>require</em> command but,when you use <em>load</em>, you can use many times in file, when you use <em>require</em>, <em>require</em> load file only once and generally <em>require</em> more preferred than it.
In addition, If we use ruby library, we should use, like</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;library_name&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>You can see to use all path and method with <strong>ENV</strong></p>

<p>Writing command about <strong>Gem</strong> :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gem -v       <span class="c">#seeing the version of gem</span>
</span><span class='line'>gem update --system  <span class="c">#provide to update your system</span>
</span><span class='line'>gem list      <span class="c">#you can see all gem list</span>
</span><span class='line'>gem list -r   <span class="c">#will see load to gem</span>
</span><span class='line'>gem install pry   <span class="c">#provide to writing colorful in terminal.</span>
</span><span class='line'>gem install pry --no-ri   <span class="c"># thanks to this we can install without documentation.</span>
</span><span class='line'>gem uninstall package_name    <span class="c">#use for uninstall gem</span>
</span></code></pre></td></tr></table></div></figure>


<p>If you use package ,before need to install the package, using this command</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gem install package_name
</span></code></pre></td></tr></table></div></figure>


<p>when we install this gem, then we embeded in <em>currently_working_file.rb</em> like</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>require <span class="s1">&#39;package_name&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>If I use many gem, Do I install gem one by one? </strong></p>

<p>Of course No!, instead of this we use  <em>Gemfile</em>, we write in file</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">source</span> <span class="o">(</span><span class="s1">&#39;http://ruby-gems.org&#39;</span><span class="o">)</span>
</span><span class='line'>gem <span class="s1">&#39;package_name&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>we write above command in Gemfile, we install automatically all gems.</p>

<p><strong>Also</strong> If I create a ruby file, go to wanted directory and write below code, These code provided create ruby file in Desktop.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gem install bundler
</span><span class='line'><span class="nb">cd </span>Desktop        <span class="c">#for desktop path</span>
</span><span class='line'>bundle gem package_name
</span></code></pre></td></tr></table></div></figure>


<p>For detail viewing <a href="http://bundler.io/">Bundler</a></p>

<p>Opened file, after we make to do, push to package to <a href="http://rubygems.org">RubyGems</a> then we see in this site.</p>

<p><strong>Note :</strong>
-Also <em>Thor</em> is a package(gem) for ruby.
&ndash;<em>ARGV</em> is constant which hidden to arguments.
-In documentation section writing <em>ri</em>  command, generally we use to search for method.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ri Class#method
</span></code></pre></td></tr></table></div></figure>


<h1>Input &ndash; Output processing</h1>

<p>For output command write like</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">puts</span>     <span class="c1"># output with \n.</span>
</span><span class='line'><span class="nb">print</span>
</span><span class='line'><span class="nb">p</span>         <span class="c1">#when we use &#39;.inspect&#39;, instead of *.inspect* we use *p*.</span>
</span><span class='line'><span class="nb">printf</span>
</span></code></pre></td></tr></table></div></figure>


<p>For input command write like</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">gets</span>     <span class="c1">#get input from user.</span>
</span></code></pre></td></tr></table></div></figure>


<p>above instead of  <em>p</em> using  <em>.inspect</em></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">puts</span> <span class="s2">&quot;ruby&quot;</span><span class="o">.</span><span class="n">inspect</span>
</span><span class='line'><span class="nb">puts</span> <span class="mi">3</span><span class="o">.</span><span class="n">inspect</span>
</span></code></pre></td></tr></table></div></figure>


<p><em>.inspect</em> method provide to take hid state of method. This means that if I using <em>.inspect</em> instead of this using <em>p</em>.</p>

<ul>
<li><em>chomp</em> provide if the last character can exist &ldquo;\n&rdquo; symbol, cleaning the last characters.</li>
<li><em>chom</em> provide to clean all last characters</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>                <span class="no">Basic</span> <span class="no">Object</span>
</span><span class='line'>                      <span class="o">||</span>
</span><span class='line'>                    <span class="no">Object</span>
</span><span class='line'>                      <span class="o">||</span>
</span><span class='line'>                    <span class="no">Numeric</span>
</span><span class='line'>                      <span class="o">||</span>
</span><span class='line'>      <span class="nb">Integer</span>     <span class="n">float</span>    <span class="no">Rational</span>    <span class="no">Complex</span>
</span><span class='line'>
</span><span class='line'><span class="no">Fixnum</span>  <span class="no">Bignum</span>
</span></code></pre></td></tr></table></div></figure>


<p>If you generally showing the class, you can show like above.</p>

<ul>
<li>In Ruby 2.0 version, if you want to defining rational number, you can like <em>30/2r</em>.</li>
<li>In Ruby monetary system should use <strong>BigDecimal</strong> library in project.</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="n">e7</span>          <span class="c1">#10.000.000</span>
</span><span class='line'><span class="mi">3</span><span class="o">.</span><span class="n">methods</span>       <span class="c1">#for 3 number, bring all methods</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;yaml&#39;</span>            <span class="c1"># added yaml .</span>
</span><span class='line'><span class="nb">puts</span> <span class="mi">2</span><span class="o">.</span><span class="n">methods</span><span class="o">.</span><span class="n">to_yaml</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><strong>&lt;=>(space ship)</strong> comparative operator.</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">a</span> <span class="o">&lt;=&gt;</span> <span class="n">b</span>
</span><span class='line'><span class="n">a</span> <span class="o">&lt;</span> <span class="n">b</span> <span class="p">;</span> <span class="o">-</span><span class="mi">1</span>
</span><span class='line'><span class="n">a</span> <span class="o">&gt;</span> <span class="n">b</span> <span class="p">;</span> <span class="mi">1</span>
</span><span class='line'><span class="n">a</span> <span class="o">=</span><span class="n">b</span> <span class="p">;</span> <span class="mi">0</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="mi">5</span> <span class="o">&amp;&amp;</span> <span class="n">b</span> <span class="o">=</span> <span class="mi">10</span>
</span><span class='line'><span class="n">a</span> <span class="o">&lt;=&gt;</span> <span class="n">b</span>            <span class="c1">#-1</span>
</span></code></pre></td></tr></table></div></figure>


<p>-times and upto methods</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="mi">10</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>or</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="mi">10</span><span class="o">.</span><span class="n">times</span> <span class="p">{</span><span class="o">|</span><span class="n">i</span><span class="o">|</span> <span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>thanks to this we write loop with <em>times</em>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:001:0&gt; 10.times <span class="k">do</span> |i|
</span><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:002:1* puts <span class="s2">&quot;ruby&quot;</span>+i.to_s
</span><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:013:1&gt; end
</span><span class='line'>ruby0
</span><span class='line'>ruby1
</span><span class='line'>ruby2
</span><span class='line'>ruby3
</span><span class='line'>ruby4
</span><span class='line'>ruby5
</span><span class='line'>ruby6
</span><span class='line'>ruby7
</span><span class='line'>ruby8
</span><span class='line'><span class="nv">ruby9</span>
</span><span class='line'><span class="o">=</span>&gt;10
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>With <em>1.upto(10){&hellip;}</em> same use with <em>times</em></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:001:0&gt; 10.upto<span class="o">(</span>10<span class="o">)</span> <span class="o">{</span>puts <span class="s2">&quot;ruby&quot;</span><span class="o">}</span>
</span><span class='line'>ruby
</span><span class='line'>ruby
</span><span class='line'>ruby
</span><span class='line'>ruby
</span><span class='line'>ruby
</span><span class='line'>ruby
</span><span class='line'>ruby
</span><span class='line'>ruby
</span><span class='line'>ruby
</span><span class='line'><span class="nv">ruby</span>
</span><span class='line'><span class="o">=</span>&gt;1
</span></code></pre></td></tr></table></div></figure>


<p>or</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:001:0&gt; 1.upt0<span class="o">(</span>10<span class="o">)</span> <span class="k">do</span> |i|
</span><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:002:1* puts <span class="s2">&quot;Ruby&quot;</span>+i.to_s
</span><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:013:1&gt; end
</span><span class='line'>Ruby1
</span><span class='line'>Ruby2
</span><span class='line'>Ruby3
</span><span class='line'>Ruby4
</span><span class='line'>Ruby5
</span><span class='line'>Ruby6
</span><span class='line'>Ruby7
</span><span class='line'>Ruby8
</span><span class='line'>Ruby9
</span><span class='line'><span class="nv">Ruby10</span>
</span><span class='line'><span class="o">=</span>&gt; 1
</span></code></pre></td></tr></table></div></figure>


<h2>Text</h2>

<ul>
<li><p>When we combine the text, we can embed in string expressions.</p>

<p>  &#8220;`
  puts &ldquo;#{&lsquo;academic&rsquo;.capitalize} #{&lsquo;information&rsquo;.upcase}&rdquo;</p>

<p>  =>  Academic INFORMATION
  &#8220;`</p></li>
</ul>


<p>-Also to support Turkish characters, you should use <em>Unicode-Utils</em> library.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gem install unicode_utils
</span></code></pre></td></tr></table></div></figure>


<p>install than, write in file,</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;unicode_utils&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">UnicodeUtils</span><span class="o">.</span><span class="n">upcase</span><span class="p">(</span><span class="s2">&quot;ruby&quot;</span><span class="p">)</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="no">RUBY</span>
</span></code></pre></td></tr></table></div></figure>


<p>&ndash;%q => use for single quotation</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">text</span> <span class="o">=</span> <span class="sx">%q&lt;Hello&gt;</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="s1">&#39;Hello&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>&ndash;%Q => use for double quotation</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">text</span><span class="o">=</span><span class="sx">%Q{Hello}</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="s2">&quot;Hello&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">irb</span><span class="p">(</span><span class="n">main</span><span class="p">):</span><span class="mo">002</span><span class="p">:</span><span class="mi">0</span><span class="o">&gt;</span> <span class="sc">?a</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="s2">&quot;a&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Everything can embed in texts.</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Everything can embed in text </span><span class="si">#{</span><span class="k">def</span> <span class="nf">name</span>
</span><span class='line'><span class="vg">$name</span><span class="o">.</span><span class="n">capitalize</span> <span class="o">+</span> <span class="s2">&quot; &quot;</span><span class="o">+</span><span class="vg">$surname</span><span class="o">.</span><span class="n">upcase</span>
</span><span class='line'><span class="k">end</span><span class="si">}</span><span class="s2"> puts &quot;</span><span class="no">My</span> <span class="nb">name</span> <span class="c1">#{name}&quot;&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">name</span><span class="o">=</span><span class="s2">&quot;Ruby&quot;</span>
</span><span class='line'><span class="n">surname</span><span class="o">=</span><span class="s2">&quot;Rails&quot;</span>
</span><span class='line'><span class="n">text</span> <span class="o">=</span> <span class="o">&lt;&lt;</span> <span class="no">ANYTHING</span>
</span><span class='line'><span class="n">I</span><span class="err">&#39;</span><span class="n">m</span> <span class="n">long</span> <span class="n">text</span>
</span><span class='line'><span class="c1">#{$name} #{$surname}</span>
</span><span class='line'><span class="no">ANYTHING</span>
</span><span class='line'><span class="nb">p</span> <span class="n">text</span>
</span></code></pre></td></tr></table></div></figure>


<p>*</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">swapcase</span>
</span></code></pre></td></tr></table></div></figure>


<p>this command translate from lower case to uppercase.</p>

<p>*</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">puts</span> <span class="n">text</span><span class="o">.</span><span class="n">split</span><span class="o">.</span><span class="n">inspect</span>
</span></code></pre></td></tr></table></div></figure>


<p>Try above method.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">text</span><span class="o">.</span><span class="n">sub</span> <span class="s1">&#39;m&#39;</span><span class="p">,</span> <span class="s1">&#39;a&#39;</span>    <span class="c1">#translate &quot;m=&gt;a&quot;</span>
</span><span class='line'><span class="n">text</span><span class="o">.</span><span class="n">gsub</span>  <span class="s1">&#39;m&#39;</span><span class="p">,</span>  <span class="s1">&#39;a&#39;</span>      <span class="c1">#translate all  from &quot;m&quot; to &quot;a&quot; .</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>For Convert to Integer</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">.</span><span class="n">to_i</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>For Convert to String</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">.</span><span class="n">to_s</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>For Convert to Array</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">.</span><span class="n">to_a</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>For Convert to Hash</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">.</span><span class="n">to_h</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Symbols</h2>

<ul>
<li>When we create symbol like,</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">:symbol_name</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>If content of text is changing generally, using symbol can be difficult, but using for constant process can be easy.</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">object_id</span>
</span></code></pre></td></tr></table></div></figure>


<p>Try command</p>

<p>-For Convert to Symbol</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">.</span><span class="n">to_sym</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Regular expression</h2>

<ul>
<li>Regular expression</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="sr">/ ... /</span>
</span></code></pre></td></tr></table></div></figure>


<p>writing in this tag.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="p">{</span><span class="mi">2</span><span class="p">,</span> <span class="mi">5</span><span class="p">}</span>      <span class="c1">#this means min 2, max 5.</span>
</span><span class='line'><span class="sr">/.{2,5}/</span> <span class="o">=~</span>  <span class="c1"># when we write &quot;john&quot;, &quot;john&quot; between 2 and 5.</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">^</span><span class="n">a</span><span class="vg">$b</span> <span class="o">=&gt;</span> <span class="n">starting</span> <span class="n">with</span> <span class="n">a</span><span class="p">,</span> <span class="n">ending</span> <span class="n">with</span> <span class="n">b</span><span class="o">.</span>
</span><span class='line'><span class="p">(</span><span class="o">+</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="n">how</span> <span class="n">many</span>
</span><span class='line'><span class="o">[^</span><span class="mi">0</span><span class="o">-</span><span class="mi">9</span><span class="o">]</span> <span class="k">if</span> <span class="ow">not</span> <span class="n">number</span> <span class="n">write</span> <span class="n">it</span> <span class="s1">&#39;^&#39;</span> <span class="n">this</span> <span class="n">means</span> <span class="n">that</span> <span class="s1">&#39;not&#39;</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[</span><span class="n">A</span><span class="o">-</span><span class="no">Za</span><span class="o">-</span><span class="n">z0</span><span class="o">-</span><span class="mi">9</span><span class="n">_</span><span class="o">]</span> <span class="o">=</span> <span class="p">\</span><span class="n">w</span>       <span class="c1">#word character</span>
</span><span class='line'><span class="o">[</span><span class="err">Â</span><span class="o">-</span><span class="no">Za</span><span class="o">-</span><span class="n">z0</span><span class="o">-</span><span class="mi">9</span><span class="n">_</span><span class="o">]</span> <span class="o">=</span> <span class="p">\</span><span class="n">W</span>         <span class="c1">#not a word character</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">exp1</span> <span class="o">=</span> <span class="sr">/.*\.$/</span>         <span class="c1">#this means ending with &#39;.&#39;</span>
</span><span class='line'><span class="n">exp2</span> <span class="o">=</span> <span class="no">Regexp</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s1">&#39;^[a-z]+$&#39;</span><span class="p">)</span>      <span class="c1">#this means that starting with a ending with z.</span>
</span><span class='line'><span class="n">exp3</span> <span class="o">=</span> <span class="sr">%r{^[a-z]+$}</span>         <span class="c1">#starting with a but not ending with z.</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How do google-analytics add to octopress?]]></title>
    <link href="http://leylaKapi.github.io/blog/2014/03/26/how-do-google-analytics-add-to-octopress/"/>
    <updated>2014-03-26T03:31:32+02:00</updated>
    <id>http://leylaKapi.github.io/blog/2014/03/26/how-do-google-analytics-add-to-octopress</id>
    <content type="html"><![CDATA[<h3>Google &ndash; analytics for Octopress</h3>

<p>Firstly, if you don&rsquo;t have a google-analytics account, you should create it. Then when you create account, google-analytics provide to <strong>tracking ID</strong> for your octopress blog. This tracking ID like</p>

<pre><code>AB-12345678-9
</code></pre>

<p>and then you should get this id, opened <em>_config.yml</em> in your octopress blog project,</p>

<pre><code>#_config.yml

#Google Analytics
google_analytics_tracking_id: AB-12345678-9
</code></pre>

<p>That&rsquo;s all.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How create tree - list menu with haml]]></title>
    <link href="http://leylaKapi.github.io/blog/2014/03/22/how-create-tree-list-menu-with-haml/"/>
    <updated>2014-03-22T18:57:27+02:00</updated>
    <id>http://leylaKapi.github.io/blog/2014/03/22/how-create-tree-list-menu-with-haml</id>
    <content type="html"><![CDATA[<h3>How to created tree &ndash; list menu with haml, sass, coffeescript ?</h3>

<p>Firstly, we create middleman project and create</p>

<pre><code>index.html.haml
style.css.sass
application.coffee
</code></pre>

<p>then we open <em>index.html.haml</em> file and we write your code like this,</p>

<pre><code>--- my code like this ---
%ul.archive_tool
  %li#tools Car
  %ul.archive_requires
    %li#requires BMW
    %li#requires Mercedes
    %li#requires Toyota
    %li#requires Fiat
  %li#tools Book
  %ul.archive_requires
    %li#requires Ruby
    %li#requires ROR
    %li#requires Thought
  %li#tools Computer
  %ul.archive_requires
    %li#requires iMac
    %li#requires Windows
    %li#requires Linux
    %li#requires Seu
  %li#tools Chair
  %ul.archive_requires
    %li#requires comfortable
    %li#requires uncomfortable
</code></pre>

<p>then open <em>style.css.sass</em> file and write style code</p>

<pre><code>  #tools, #requires
    cursor: pointer
  .archive_tool
    margin-left: 1em
    font-size: large
    font-weight: bold
    cursor: pointer
  .archive_requires
    @extend .archive_tool
    margin:
      top: 0
      bottom: 1em
    font-size: medium
    list-style-type: circle
</code></pre>

<p>then open <em>application.coffee</em> file, and</p>

<pre><code>$(document).ready -&gt;
  $(".archive_tool ul").hide()
  $(".archive_tool &gt; li").click -&gt;
    $(this).parent().find("ul").slideToggle()

    return

  $(".archive_requires &gt; li").click -&gt;
    $(this).parent().find("ul").slideToggle()
</code></pre>

<p>we write this code inside haml, sass, and coffeescript file and then saved all, run this middleman project.</p>

<p>According to edit your own project try to run codes.</p>

<p>I hope, helped you.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to change DNS settings on Ubuntu Desktop?]]></title>
    <link href="http://leylaKapi.github.io/blog/2014/03/22/how-to-change-dns-settings-on-ubuntu-desktop/"/>
    <updated>2014-03-22T15:17:32+02:00</updated>
    <id>http://leylaKapi.github.io/blog/2014/03/22/how-to-change-dns-settings-on-ubuntu-desktop</id>
    <content type="html"><![CDATA[<h3>How to change DNS settings (ip address) or How to set up Google public DNS for Ubuntu Desktop?</h3>

<p>Firstly, we should look at Google Public DNS.</p>

<h5>What is the Google Public DNS?</h5>

<p>Google DNS created by Prem Ramaswami at 2009 . Google Public DNS provide to free DNS settings.
Without DNS, it wil be difficult to know IP address of websites which visit daily.</p>

<h5>How to change DNS settings ?</h5>

<p>Open terminal in Ubuntu Desktop with</p>

<pre><code>CTRL + ALT + T
</code></pre>

<p>and run this command</p>

<pre><code>sudo gedit /etc/dhcp/dhclient.conf
</code></pre>

<p>opened gedit file and find</p>

<pre><code>prepend domain_name_servers
</code></pre>

<p>then changed to</p>

<pre><code>prepend domain_name_servers 8.8.8.8, 8.8.4.4;
</code></pre>

<p>and save &ndash; restart computer.</p>

<p>Now, you should go to</p>

<pre><code>System settings -&gt; Network
</code></pre>

<p>or</p>

<pre><code>Right click on Network Manager
    Edit Connection
        Wired Connection 1
</code></pre>

<p>select Wired</p>

<pre><code>IPv4 Settings
</code></pre>

<p>change <em>Method</em> to</p>

<pre><code>Automatic (DHCP) address only
</code></pre>

<p>and restore DNS</p>

<pre><code>DNS Servers: 8.8.8.8, 8.8.4.4
</code></pre>

<p>then save.</p>

<p>I try to explain change DNS Server and set up google public DNS on Ubuntu Desktop. I wish help you.</p>

<p>That&rsquo;s it.</p>

<p>I try to explain shortly DNS, I hope, this article helped to you .</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Middleman Blog]]></title>
    <link href="http://leylaKapi.github.io/blog/2014/03/15/blog-middleman/"/>
    <updated>2014-03-15T17:05:21+02:00</updated>
    <id>http://leylaKapi.github.io/blog/2014/03/15/blog-middleman</id>
    <content type="html"><![CDATA[<h3>How to create middleman blog for middleman project?</h3>

<ul>
<li>Middleman supported blogging in your project or your blog.</li>
</ul>


<p>If you create a blog, I think you should with middleman blogging. I hear, you say &lsquo; WHY ? &rsquo;</p>

<p>WHY?</p>

<ul>
<li>Easy to use,</li>
<li>Embed in your project easily</li>
</ul>


<p>&hellip;</p>

<p><strong>Let&rsquo;s learn blogging with middleman blog</strong></p>

<p>Firstly, if you use middleman blog in your project, this means if you use blogging in your website or application,
you  should go to path of your project, open and write above command.</p>

<p>you write in <em>Gemfile</em> :</p>

<pre><code>    gem ' middleman-blog '
</code></pre>

<p>and then, in <em>config.rb</em></p>

<pre><code>    activate :blog do |blog|
    ---
    set
</code></pre>

<p>and when you write these command in your project, open terminal or console  write</p>

<pre><code>    bundle install                  #install gems
    bundle exec middleman server    #run your blog in your project
</code></pre>

<p>If you want to set up from the rough, what you want to open to path, and write in terminal</p>

<pre><code>    middleman init blog_name --template=blog
</code></pre>

<p>When you write this command you can see, many file created for your blo.</p>

<p>Now open created blog, you should see directories,</p>

<pre><code>    images
    javascripts
    stylesheets
</code></pre>

<p>files,</p>

<pre><code>    index.html.erb
    layout.erb
    calendar.html.erb
    tags.html.erb
    feed.xml.builder
    2012-01-01-example-article
</code></pre>

<ul>
<li>Middleman provide  many tags and properties for your blog, if you want to organize, you can open <em>config.rb</em> and organize these, and see.</li>
<li>If you want to organize style for blog, you should write in stylesheets and javascript directories, with CSS3 and Jquery ;)</li>
<li>If you don&rsquo;t want to use <strong>.html.erb</strong> files, you can translate to <strong>.html.haml</strong> in <a href="http://html2haml.heroku.com/">html2haml</a>.</li>
</ul>


<p>And use this.</p>

<ul>
<li>If you want to use blog in your middleman project, you should create new layouts, and <em>index.html.haml</em> in your blog directory,
different from your middleman project.
and we write code in this.</li>
</ul>


<p>Yep ! you create new blog and prepared write new article your blog,</p>

<p>Let&rsquo;s start :)</p>

<pre><code>middleman article article_name
</code></pre>

<p>When write this command, middleman created new article file, blogging in this file, but we write with markdown inside created article file.</p>

<p>When you write your article you run project with</p>

<pre><code>bundle exec middleman server
</code></pre>

<p>after the</p>

<pre><code>bundle install
</code></pre>

<p>run and see what you can do ?</p>

<p>That&rsquo;s it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to show nav-bar according to scroll]]></title>
    <link href="http://leylaKapi.github.io/blog/2014/03/06/how-to-show-nav-bar-according-to-scroll/"/>
    <updated>2014-03-06T19:30:31+02:00</updated>
    <id>http://leylaKapi.github.io/blog/2014/03/06/how-to-show-nav-bar-according-to-scroll</id>
    <content type="html"><![CDATA[<h3>Change CSS class after scrolling &hellip;px down</h3>

<p>I want to change menu or nav-bar according to scroll, How I can do this ?</p>

<p>In this article, I can try to explain with an example.</p>

<p>Please, write these code block on your project or created a new project and try to these .
Yep!, Let&rsquo;s learn step by step :)</p>

<p>Firstly, Created HTML file in your project and write below code block,</p>

<pre><code>index.html

&lt;div id = 'navigation'&gt; Home &lt;/div&gt;
    &lt;h1&gt; Welcome to Change scroll according to ...px &lt;/h1&gt;
    &lt;p&gt; Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod
    tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis
    nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute
     irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.
    Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim
     id est laborum &lt;/p&gt;
</code></pre>

<p>then wrote this code block in your HTML file. Let&rsquo;s create CSS file in your project for style of your project.</p>

<pre><code>style.css

#navigation {
        width : 100px;
        height : 100px;
        background-color:blue;
        position: fixed;
        display: none;
}
</code></pre>

<p>this last step but the most important step for scrolling to navigation. Create javascript file for your animation of your project</p>

<pre><code>application.js

$(document).scroll(function() {
        $('#navigation').toggle($(this).scrollTop() &gt; 1000);
});
</code></pre>

<p>Wrote in your project these block and try to run project and What are you seeing in your project ?</p>

<p>That&rsquo;s easy!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CSS Sprite use in SASS]]></title>
    <link href="http://leylaKapi.github.io/blog/2014/03/02/css-sprite-use-in-sass/"/>
    <updated>2014-03-02T16:12:43+02:00</updated>
    <id>http://leylaKapi.github.io/blog/2014/03/02/css-sprite-use-in-sass</id>
    <content type="html"><![CDATA[<h3>What is the CSS sprite? Why do we need to this ?</h3>

<p>CSS Sprite means that combine all images in a single image file. The aim is that,
when we upload several image file for use in css or sass file, you should upload to each.</p>

<p><strong>If I give an example, you understand easily: </strong></p>

<p>We have <strong>10 or more images</strong> and we should use in CSS folder, but this is difficult
 and mixed not only for 10 picture but also 100, 10000 pictures.
you will each image upload 10 times or more for use.
Can you imagine it ?</p>

<p>It&rsquo;s very difficult and mixed !</p>

<p>Instead of this we use CSS Sprite method and fixed this mixed. If you have 10 images,
you should combine  these images in a single page
and pull in this page. Thus, CSS Sprite provide to fast loading  when opened quickly your images of website.</p>

<p>I think your understand CSS Sprite, How use it ?</p>

<ul>
<li><p>Firstly, you create a single page for using images and combine all pictures in single page.</p></li>
<li><p>And now we use CSS or SASS code for pull each picture in single page.</p></li>
</ul>


<p>For example, you have a icons&#8217; pictures page and we pull each icon on icons&#8217; picture page, we
should use CSS or SASS sprite</p>

<pre><code>.icon
    background: url("../images/icon-sprite.png") no repeat
    display: inline-block
.icon1
    @extend .icon
    background-position: 0px 0px
.icon2
    @extend .icon
    background-position: 20px 34px

    ...
</code></pre>

<p>means that above code :</p>

<p>We upload single page on <em>icon</em> class and we want to use anything icon in single page which position has these.
but before use <em>extend</em> for use <em>icon</em> class in <em>icon1</em> class. And I want to use another icon, I prepare position of it.
and use in</p>

<pre><code>    background-position
</code></pre>

<p>Thanks to CSS Sprite, when opened images in your site, it opened quickly.</p>

<p>That&rsquo;s it !</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Brief Info about hash]]></title>
    <link href="http://leylaKapi.github.io/blog/2014/03/01/brief-info-about-hash/"/>
    <updated>2014-03-01T18:52:57+02:00</updated>
    <id>http://leylaKapi.github.io/blog/2014/03/01/brief-info-about-hash</id>
    <content type="html"><![CDATA[<h3>What is the hash in ruby ?</h3>

<p>Hash, hash, hash ?</p>

<ul>
<li>Hashes are one of the biggest property which separated another language in ruby.</li>
<li>Hash was known <strong>associative array</strong> in another programming language.</li>
<li><p>In hash, elements keep <strong>&lsquo;key => value&rsquo;</strong> format in ruby . Like</p>

<pre><code>  hash_example = { 'name' =&gt; 'John', 'surname' =&gt; 'doe' }
</code></pre></li>
<li><p>Values of keys can be any type, but when you use <strong>&lsquo;eql?&rsquo;</strong> method, it can be only a key according to each other.</p>

<pre><code>  a = { 3 =&gt; 'three', 3.0 =&gt; 'threedotzero' }
  a[3]        #three
  a[3.0]      #threedotzero

  3 == 3.0        #true
  3.eql? 3.0      #false
</code></pre></li>
<li><p>Hashes usually write with symbols, like :</p>

<pre><code>  hash_with_symbol{ name: 'John', surname: 'Doe'}
</code></pre></li>
<li><p>Hashes are similar to Array class, but Array uses integer as its index, hash allow to us any object type.</p>

<pre><code>  hash_differences_array{ 'age' =&gt; 15, 'year' =&gt; 2014 }

  array_differences_hash = [1, 2, 3]
</code></pre></li>
</ul>


<p>In my opinion, You have an information about hashes. Do you agree with me?!</p>

<ul>
<li>Continue to learn!, I have an information about hash, but if I want to access only keys or values , How does it access or separate these in hash ?</li>
</ul>


<p>For this question, solution: if you want to access to keys use</p>

<pre><code>        keys
</code></pre>

<p>method, if you want to access to values use</p>

<pre><code>        values
</code></pre>

<p>methods. Like:</p>

<pre><code>        access_values_keys{ name: 'john', surname: 'Doe'}

        access_values_keys.keys         # [:name, :surname]
        access_values_keys.values       #['John', 'Doe']
</code></pre>

<ul>
<li><p>Generally, hashes are using in parameters of name,</p>

<pre><code>      def parameters_name(name, age)

          '#{name} : #{age}'
      end

      puts name 'John' , 18       # Ali : 18
</code></pre></li>
<li><p>Hashes uses to <strong>ENUMERABLE</strong> module like arrays.</p>

<pre><code>      {}.class.ancestors          #show the hash ancestors.
                                  #[Hash, Enumerable, Object, PP::ObjectMixin, Kernel, BasicObject]
</code></pre></li>
<li><p>If you want to change from array to hash, you should use</p>

<pre><code>      .to_h
</code></pre></li>
</ul>


<p><strong>Lastly</strong> If you want to learn more, you can visit <a href="http://www.ruby-doc.org/core-2.0/Hash.html">ruby-doc</a> .</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What is the Ruby On Rails?]]></title>
    <link href="http://leylaKapi.github.io/blog/2014/02/28/what-is-the-ruby-on-rails/"/>
    <updated>2014-02-28T18:25:39+02:00</updated>
    <id>http://leylaKapi.github.io/blog/2014/02/28/what-is-the-ruby-on-rails</id>
    <content type="html"><![CDATA[<h2>What is the Ruby On Rails and How install?</h2>

<p><strong>Ruby</strong></p>

<ul>
<li>Object oriented programming language</li>
<li>Created in 1995 by Matz</li>
<li>Used for many purpose, not only web app.</li>
</ul>


<p><strong>Ruby on Rails</strong></p>

<ul>
<li>Open source, web applications framework.</li>
<li>Written in Ruby</li>
<li>Release as open source in 2004</li>
</ul>


<h4>How install Ruby On Rails?</h4>

<p>Firstly, you have to install ruby, and then start install rails.
Is there ruby in your pc? Look at!</p>

<pre><code>   ruby -v
   # ruby 2.0.0p353 (2013-11-22 revision 43784) [x86_64-darwin13.0.0]
</code></pre>

<p>I hear , &lsquo;my pc don&rsquo;t has ruby.&rsquo; Dont worry, when you are going to <a href="https://www.ruby-lang.org/en/">download ruby</a>.
Now, we install the ruby after then</p>

<pre><code>  gem update system
</code></pre>

<p>start install rails framework.</p>

<pre><code>gem install rails
</code></pre>

<p>rails was install and which version?</p>

<pre><code>    rails --version  or rails -v
    # Rails 4.0.2
</code></pre>

<p>Yeah!, now pc has ruby and rails.</p>

<p>Then we can start to create Ruby on Rails project.</p>

<pre><code>rails new start_rails_project
</code></pre>

<p>Created rails project. That&rsquo;s very easy!</p>

<p>Go to rails project path and install bundler</p>

<pre><code>  gem install bundle
  bundle install
</code></pre>

<p>Now, you can write your ruby code on rails framework . How run your rails applications ?</p>

<p>We should write</p>

<pre><code>    rails server or rails s
</code></pre>

<p>In terminal, you should see this url &lsquo;<a href="http://0.0.0.0:3000">http://0.0.0.0:3000</a>&rsquo; and copy this, paste on your search bar.</p>

<p>You can see Ruby default information page</p>

<p><img src="../images/rails_welcome.png" alt="Default page" /></p>

<p>Yeah, Installed Ruby On Rails and started to code your rails applications.</p>

<p>If you want to learn more, you should visit <a href="http://guides.rubyonrails.org/">rubyonrails</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Middleman create haml file]]></title>
    <link href="http://leylaKapi.github.io/blog/2014/02/27/middleman-create-haml-file/"/>
    <updated>2014-02-27T13:49:10+02:00</updated>
    <id>http://leylaKapi.github.io/blog/2014/02/27/middleman-create-haml-file</id>
    <content type="html"><![CDATA[<h3>How to create .haml file in middleman?</h3>

<p>Firstly, you should go <a href="" title="http://middlemanapp.com/">middleman</a> and you need to <strong>install middleman</strong></p>

<pre><code>gem install middleman
</code></pre>

<p>Fine, you are installed middleman, now we start to create project in middleman</p>

<pre><code>middleman init project_name
</code></pre>

<p>Then this command give you directory as shown below :</p>

<pre><code> project_name/
    Gemfile
    Gemfile.lock
    config.rb
    source
        .gitignore
        images
            background.png
            middleman.png
        javascript
            all.js
        stylesheets
            all.css
            normalize.css
        layouts
            layout.erb
        index.html.erb
</code></pre>

<p>If you can see this directories, you should open project with your IDE.</p>

<p><strong>Now, We create .haml file but how ?</strong></p>

<p>Go ahead and remove below files because these files don&rsquo;t use in project.</p>

<pre><code>- /source/images/background.png
- /source/images/middleman.png
- /source/javascript/all.js
- /source/stylesheets/all.css
- /source/stylesheets/normalize.css
- /source/layouts/layout.erb
- /source/index.html.erb
</code></pre>

<p>Now, Projects was removed from unused files.</p>

<h5>Add HAML</h5>

<p>Middleman appear to read HTML by default . Therefore, you should go to</p>

<pre><code>   /config.rb
</code></pre>

<p>in file write:</p>

<pre><code>    set :haml, :format =&gt; :html5
</code></pre>

<p>Now program convert to html5 from haml.</p>

<ul>
<li><p>Add a</p>

<pre><code>  layout.haml
</code></pre></li>
</ul>


<p>file to the</p>

<pre><code>      /source/layouts
</code></pre>

<p>directory. In this file we write</p>

<pre><code>    !!!
    %html{ :lang =&gt; "en"}
        %head
            %meta{:charset =&gt; "utf-8"}
            %title= data.page.title
            = stylesheet_link_tag "your_css_file.css"
            = javascript_include_tag "your_javascript_file.js"
        %body
            = yield
</code></pre>

<p>Now we must create</p>

<pre><code>        index.html.haml
</code></pre>

<p>in</p>

<pre><code>            source/
</code></pre>

<p>directory.</p>

<pre><code>        %h1 Welcome Middleman project
</code></pre>

<p>write in</p>

<pre><code>            source/index.html.haml
</code></pre>

<p>files.</p>

<p>We are create middleman project and write codes, How we run this program?</p>

<p>Wait! Dont worry, When writing to below command in terminal in order of this.</p>

<pre><code># Go to project path

     cd project_name
     bundle install
     bundle exec middleman server
</code></pre>

<p>then we are seen</p>

<pre><code>         http://localhost:3000
</code></pre>

<p>like url. We should copy this url and paste on browser search bar.</p>

<p>That&rsquo;s it! Try and see.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Markdown article some style]]></title>
    <link href="http://leylaKapi.github.io/blog/2014/02/26/markdown-article-some-style/"/>
    <updated>2014-02-26T17:59:49+02:00</updated>
    <id>http://leylaKapi.github.io/blog/2014/02/26/markdown-article-some-style</id>
    <content type="html"><![CDATA[<h2>Write article with markdown</h2>

<ul>
<li>When you start to write article with markdown, we can recognize to writing regularly and reading easily.</li>
</ul>


<p>Firstly</p>

<h4>How to write header in markdown?</h4>

<p>While you&rsquo;re writing header, you should write in &lsquo;#&rsquo;(pound sign)</p>

<pre><code>    # Header 1
    ## Header 2
    ### Header 3
    #### Header 4
    ##### Header 5
    ###### Header 6
</code></pre>

<p>Bold are header more and more smaller, from above example, the boldest header is Header 1 and the lightest header is Header 2</p>

<h4>How to write lists in markdown?</h4>

<p>If you want to write list, How?</p>

<p><strong>ordered or unordered</strong></p>

<p>Firstly Ordered :</p>

<p>We use number when we want to write ordered.</p>

<p>Secondly unordered :</p>

<p>We use &lsquo;&ndash;&rsquo; and &lsquo;*&rsquo; the symbol provide to write unordered.</p>

<pre><code>  - apple
  - banana
  - strawberries
</code></pre>

<h4>How to write code in markdown?</h4>

<p>When you write code block in markdown, you use &lsquo;&#8220;`&rsquo; symbol. How to write this symbol on keyboard?
 Don&rsquo;t worry! when we press on &lsquo; alt + , &rsquo; we create this symbol.</p>

<p>like this :</p>

<pre><code>````
    ...

```
</code></pre>

<p>Also we specify the how write this code ? or with what write ?</p>

<p>We say to terminal, konsol or ide you saying like :</p>

<pre><code>```ruby
    ...

```
</code></pre>

<p>Now we say to terminal write ruby code block, and write according to ruby language.</p>

<h4>How to write to link in markdown ?</h4>

<p>When we use link about anything and if you want to be regularly you should use markdown and use like this :</p>

<pre><code>```
    [github](http://github.com)
    [leylakapi](http://leylakapi.github.io)
```
</code></pre>

<p>When the click github, redirected to on &lsquo;<a href="http://github.com">http://github.com</a>&rsquo;  this link.</p>

<p>I tried to explain markdown, when we write code, link, header or list. I think these are the most commonly use .</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to add 'About' page in octopress]]></title>
    <link href="http://leylaKapi.github.io/blog/2014/02/26/how-to-add-aboout-page-in-octopress/"/>
    <updated>2014-02-26T14:25:12+02:00</updated>
    <id>http://leylaKapi.github.io/blog/2014/02/26/how-to-add-aboout-page-in-octopress</id>
    <content type="html"><![CDATA[<h3>How to add &lsquo;About&rsquo; page in Octopress?</h3>

<p>I needs 2 step for create &lsquo;About&rsquo; page on navigation bar.</p>

<ul>
<li><p>Firstly create &lsquo;about page&rsquo;</p>

<p>  <code>
      rake new_page\["About"\]
 </code></p></li>
</ul>


<p>Created new page for about and we linked to &lsquo;About&rsquo;, How?</p>

<ul>
<li><p>We open</p>

<p>  <code>
      /source/_includes/custom/navigation.html
 </code></p></li>
</ul>


<p> write the 3rd line below:</p>

<pre><code>```
   &lt;ul class="main-navigation"&gt;
     &lt;li&gt;&lt;a href="http://leylaKapi.github.io/"&gt;Blog&lt;/a&gt;&lt;/li&gt;
     &lt;li&gt;&lt;a href="/blog/archives"&gt;Archives&lt;/a&gt;&lt;/li&gt;
     &lt;li&gt;&lt;a href="http://leylaKapi.github.io/about"&gt;About&lt;/a&gt;&lt;/li&gt;
   &lt;/ul&gt;

```
</code></pre>

<p>then we use git command for sent on github</p>

<pre><code>```
    git add .
    git commit -m "Your Commit"
    git push origin source
```
</code></pre>

<p>And, for see on personal blog we need to deploy your code</p>

<pre><code>```
    rake generate
    rake preview   #see on localhost:4000
    rake deploy
```
</code></pre>

<p>That&rsquo;s it!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Commands of github for setup]]></title>
    <link href="http://leylaKapi.github.io/blog/2014/02/26/commands-of-github-for-setup/"/>
    <updated>2014-02-26T12:31:12+02:00</updated>
    <id>http://leylaKapi.github.io/blog/2014/02/26/commands-of-github-for-setup</id>
    <content type="html"><![CDATA[<h3>What I can setup github and create repo?</h3>

<ul>
<li>Firstly we create github account from <a href="https://github.com/">github</a></li>
<li>We create a new repo from &lsquo;+&rsquo; symbol.</li>
<li>We named this repo and creating.</li>
<li><p>After, We seems to this url</p>

<pre><code>  HTTP: https://github.com/username/repo_name.git
  SSH: git@github.com:username/repo_name.git
</code></pre></li>
</ul>


<p>We use any link. Now, we clone this repo on pc.</p>

<p>Use this command</p>

<pre><code>    git clone https://github.com/username/repo_name.git
</code></pre>

<p>Now you are cloning to pc but where this file?</p>

<p>For this question, Where you want to setup, install there. For example, if you want to clone in desktop, you should go desktop path
like this(For Mac);</p>

<pre><code>    cd Desktop/
</code></pre>

<p>And then cloning this path.</p>

<ul>
<li>After clone, We open this file on ide or anywhere, writing our code in file.</li>
</ul>


<p>Now, changed this file, We should push this file to github.
Hence, we use this code ;</p>

<pre><code>    git add .
</code></pre>

<p>With this command, we added all changed file on network, we wait for push.</p>

<ul>
<li><p>Which file added on network? Answer this question, We write this command and see to adding file.</p>

<pre><code>  git status
</code></pre></li>
<li><p>We are saw to adding file , Now We need to commit for then to remember the files which adding.</p>

<pre><code>  git commit -m "your_comment"
</code></pre></li>
<li><p>We prepared commit, Now all preparations are prepared, and we should push file n github</p>

<pre><code>  git push origin master
</code></pre></li>
</ul>


<p>Note: &lsquo;master&rsquo; are name of branch on github, if you use another branch or  don&rsquo;t use &lsquo;master&rsquo; branch we created new branch and push</p>

<pre><code>    git push origin branch_name
</code></pre>

<ul>
<li><p>If you want to see branches in your repo,</p>

<pre><code>  git branch -a
</code></pre></li>
<li><p>If you created new branch</p>

<pre><code>  git branch name_of_newbranch
</code></pre></li>
<li><p>Now, you are in name_of_newbranch , but you want to return or switch another branch therefore</p>

<p>  git checkout another_branch</p></li>
</ul>


<p> Git command basicly like this.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[After new_post]]></title>
    <link href="http://leylaKapi.github.io/blog/2014/02/26/after-new-post/"/>
    <updated>2014-02-26T11:30:57+02:00</updated>
    <id>http://leylaKapi.github.io/blog/2014/02/26/after-new-post</id>
    <content type="html"><![CDATA[<h3>When I setup Octopress Repository, error of</h3>

<pre><code>rake deploy
</code></pre>

<p>I setup the Octopress, and I create,</p>

<pre><code>rake new_post\["Hello World"\]
</code></pre>

<p>then push github on</p>

<pre><code>source
</code></pre>

<p>branch, and when I</p>

<pre><code>rake deploy
</code></pre>

<p> Terminal show this code :</p>

<pre><code>To https://github.com/username/username.github.io.git
! [rejected]        master -&gt; master (non-fast-forward)
error: failed to push some refs to 'https://github.com/username/username.github.io.git'
hint: Updates were rejected because the tip of your current branch is behind
hint: its remote counterpart. Merge the remote changes (e.g. 'git pull')
hint: before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.

 Github Pages deploy complete
</code></pre>

<h3>What I can fix it ?</h3>

<p> Firstly</p>

<pre><code>git clone https://github.com/username/username.github.io.git
git checkout source
</code></pre>

<p> I cloning to username.github.io into master, and checkout source</p>

<p> Secondly we need to setup &lsquo;deploy&rsquo; directories</p>

<pre><code>mkdir _deploy
cd _deploy
git init
git remote add -t master -f origin https://github.com/username/username.github.io.git
</code></pre>

<p>Now, we can use</p>

<pre><code>rake deploy
</code></pre>

<p>or</p>

<pre><code>rake gen_deploy
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Meaning of abbreviations]]></title>
    <link href="http://leylaKapi.github.io/blog/2014/02/26/meaning-of-abbreviations/"/>
    <updated>2014-02-26T10:04:36+02:00</updated>
    <id>http://leylaKapi.github.io/blog/2014/02/26/meaning-of-abbreviations</id>
    <content type="html"><![CDATA[<h2>What is the meaning of abbreviation for HTML, CSS, &hellip;?</h2>

<ul>
<li>HTML : Hyper text markup language</li>
<li>CSS : Cascading Stylesheet</li>
<li>Haml : HTML Abstraction markup language</li>
<li>SASS: Syntactically Awesome Stylesheets</li>
</ul>

]]></content>
  </entry>
  
</feed>
