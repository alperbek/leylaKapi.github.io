<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Middleman | Leyla's Blog]]></title>
  <link href="http://leylaKapi.github.io/blog/categories/middleman/atom.xml" rel="self"/>
  <link href="http://leylaKapi.github.io/"/>
  <updated>2020-01-09T23:19:29+01:00</updated>
  <id>http://leylaKapi.github.io/</id>
  <author>
    <name><![CDATA[Leyla KAPI]]></name>
    <email><![CDATA[leylakapi@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Bundle Error Middleman El-capitan]]></title>
    <link href="http://leylaKapi.github.io/blog/2016/08/10/bundle-error-middleman-elcapitan/"/>
    <updated>2016-08-10T00:00:00+02:00</updated>
    <id>http://leylaKapi.github.io/blog/2016/08/10/bundle-error-middleman-elcapitan</id>
    <content type="html"><![CDATA[<p>If your computer has OSX 10.11 El Capitan, and try to create middleman project then  write <code>bundle</code> to install gems. But you can get</p>

<p><code>bash
Installing eventmachine 1.0.7 with native extensions
Gem::Ext::BuildError: ERROR: Failed to build gem native extension.
In file included from binder.cpp:20:
./project.h:116:10 fatal error: 'openssl/ssl.h' file not found
include &lt;openssl/ssl.h&gt;
1 error generated
</code></p>

<p>like above error. You have to solve problem with <code>openssl</code> .
For fix it ;</p>

<p><code>bash
brew link openssl --force
</code></p>

<p>then you can run <code>bundle</code> now. For detail about this problem please look at <a href="https://github.com/eventmachine/eventmachine/issues/643">this link</a></p>

<p>I hope helped to you .</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Add Multi-lingual Support to Your Web-page in Middleman]]></title>
    <link href="http://leylaKapi.github.io/blog/2014/10/27/how-to-add-multi-lingual-support-to-your-web-page-in-middleman/"/>
    <updated>2014-10-27T00:00:00+01:00</updated>
    <id>http://leylaKapi.github.io/blog/2014/10/27/how-to-add-multi-lingual-support-to-your-web-page-in-middleman</id>
    <content type="html"><![CDATA[<h3>Multi-Lingual Support</h3>

<p>Firstly you should create middleman project , if doesn&rsquo;t exist it. Then in your project,
open <code>config.rb</code>  file add below code,</p>

<p><code>ruby
activate :i18n
</code></p>

<p>when you add above code, you can active to <code>:i18n</code>. <code>i18n</code> extension provides a way to localize your site.
After that you should add path of your locale directories in your project roots <code>~/MyProject/locales</code> directory and code
should be seems like below</p>

<p><code>ruby
activate :i18n, :path =&gt; "/:locale/"
</code></p>

<!-- more -->


<p>But before above command you should create new directory in your root of your project. Means of above code, created
locale directory which including languages <code>yaml</code> files.</p>

<p>Then you should add root of your project according to your page language. If you want to seems to your page in english
languages, you should add below code according to yml file in <code>~/MyProject/locales/en.yml</code>,
if it is exist, you can write below code in <code>config.rb</code>,</p>

<p><code>ruby
activate :i18n, :path =&gt; "/:locale/", :mount_at_root =&gt; :en
</code></p>

<p>Now your page always seems in english language, but if write in address bar like <code>/es/index.html</code>, you can see in
spanish languages, if there is exist in locales directory <code>es.yml</code> file.</p>

<p>According to above,  you want to change language of your page according to your place, for example, if your page was opened in Italy,
automatically shows your page in italian language, you can write instead of above,</p>

<p><code>ruby
activate :i18n, :path =&gt; "/:locale/", :mount_at_root =&gt; false
</code></p>

<p>You can be carefully according to above, <code>false</code> and <code>:en</code>, because these codes provide to seems your page in root which language.</p>

<p>If you created <code>locale</code> directory in root of your project, you can add which languages you want, to seem your page view,
for example I want to seems my page in russian language, because of this I should create in locale directories <code>ru.yml</code> file.
or want see in english language, can be <code>en.yml</code>. In <code>en.yml</code> you start to add your sentence like</p>

<h2>```yaml</h2>

<p>en:
  hello: Hello
```</p>

<p>and</p>

<h2>```yaml</h2>

<p>ru:
   hello: привет
```</p>

<p>When create your yaml file like above, I want to page seems in russian and english because I created two yaml file
one of the <code>en.yml</code> another of <code>ru.yml</code> .</p>

<p>Then you should go to source directory in project than create <code>~/MyProject/source/localizable/</code> folder in source directory,
after you should copy your <code>index.html.erb</code> or if your use <code>haml</code>, copy your <code>index.html.haml</code> to inside <code>~/MyProject/source/localizable/</code>
folder. You should change sentences or words in your project according to yml file. While you are doing this you
can be <code>t</code> parameter for can be shortly instead of <code>i18n</code>. According to above yml files, if I change words or sentence
in <code>index.html.haml</code> , can be like</p>

<p><code>haml
= t('hello')
</code></p>

<p>After when running your project, middleman thanks to <code>i18n</code> perceive automatically. if in address bar
write <code>/ru/index.html</code>, <code>i18n</code> according to <code>ru.yml</code> changed your words and sentences or if you write <code>en/index.html</code>,
changed according to <code>en.yml</code> file.</p>

<p>For more information you look at <a href="http://middlemanapp.com/advanced/localization/">home page</a></p>

<p>That&rsquo;s all.</p>

<p>I hope helped to you.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Error Compiling Sass Assets]]></title>
    <link href="http://leylaKapi.github.io/blog/2014/07/17/error-compiling-sass-assets/"/>
    <updated>2014-07-17T15:27:24+02:00</updated>
    <id>http://leylaKapi.github.io/blog/2014/07/17/error-compiling-sass-assets</id>
    <content type="html"><![CDATA[<h3>Middleman sass compiling error</h3>

<p>While you were made web template with <code>haml</code> and <code>sass</code>, if you use middleman and bootstrap for your web template and your project give you like,</p>

<p><code>sass
Error compiling CSS asset
NoMethodError: undefined method `font_path` for nil:NilClass
</code>
error.</p>

<!-- more -->


<p>You can fix like with edit your <code>Gemfile</code></p>

<p><code>ruby
gem 'bootstrap-sass', '~&gt; 3.1.1'
gem 'middleman-sprockets', '3.2.2'
gem 'middleman-bootstrap-navbar','~&gt;2.0'
</code></p>

<p>Then you can write in terminal <code>bundle install</code>
Than if errors didn&rsquo;t fixed, you should write on terminal</p>

<p><code>bash
bundle update middleman-sprockets
</code></p>

<p>If you want to researches with details, you should look <a href="https://github.com/middleman/middleman/issues/1265">this page</a></p>

<p>That&rsquo;s all.</p>

<p>I hope helped to you.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How Create Tree - List Menu With HAML]]></title>
    <link href="http://leylaKapi.github.io/blog/2014/03/22/how-create-tree-list-menu-with-haml/"/>
    <updated>2014-03-22T17:57:27+01:00</updated>
    <id>http://leylaKapi.github.io/blog/2014/03/22/how-create-tree-list-menu-with-haml</id>
    <content type="html"><![CDATA[<h3>How to created tree &ndash; list menu with haml, sass, coffeescript ?</h3>

<p>Firstly, we create middleman project and create</p>

<pre><code>index.html.haml
style.css.sass
application.coffee
</code></pre>

<p>then we open <code>index.html.haml</code> file and we write your code like this,</p>

<!-- more -->


<p>``` haml</p>

<pre><code>--- my code like this ---
%ul.archive_tool
  %li#tools Car
  %ul.archive_requires
    %li#requires BMW
    %li#requires Mercedes
    %li#requires Toyota
    %li#requires Fiat
  %li#tools Book
  %ul.archive_requires
    %li#requires Ruby
    %li#requires ROR
    %li#requires Thought
  %li#tools Computer
  %ul.archive_requires
    %li#requires iMac
    %li#requires Windows
    %li#requires Linux
    %li#requires Seu
  %li#tools Chair
  %ul.archive_requires
    %li#requires comfortable
    %li#requires uncomfortable
</code></pre>

<p><code>``
then open</code>style.css.sass` file and write style code</p>

<p>``` sass</p>

<pre><code>  #tools, #requires
    cursor: pointer
  .archive_tool
    margin-left: 1em
    font-size: large
    font-weight: bold
    cursor: pointer
  .archive_requires
    @extend .archive_tool
    margin:
      top: 0
      bottom: 1em
    font-size: medium
    list-style-type: circle
</code></pre>

<p>```</p>

<p>then open <code>application.coffee</code> file, and</p>

<p>``` coffeescript</p>

<pre><code>$(document).ready -&gt;
  $(".archive_tool ul").hide()
  $(".archive_tool &gt; li").click -&gt;
    $(this).parent().find("ul").slideToggle()
    return
  $(".archive_requires &gt; li").click -&gt;
    $(this).parent().find("ul").slideToggle()
</code></pre>

<p>```
we write this code inside haml, sass, and coffeescript file and then saved all, run this middleman project.</p>

<p>According to edit your own project try to run codes.</p>

<p>I hope, helped you.</p>
]]></content>
  </entry>
  
</feed>
