<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: gitHub | Leyla's Blog]]></title>
  <link href="http://leylaKapi.github.io/blog/categories/github/atom.xml" rel="self"/>
  <link href="http://leylaKapi.github.io/"/>
  <updated>2014-08-09T13:45:03+03:00</updated>
  <id>http://leylaKapi.github.io/</id>
  <author>
    <name><![CDATA[Leyla Kapi]]></name>
    <email><![CDATA[leylakapi@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Integration git-flow on Rubymine]]></title>
    <link href="http://leylaKapi.github.io/blog/2014/08/01/integration-git-flow-on-rubymine/"/>
    <updated>2014-08-01T23:02:42+03:00</updated>
    <id>http://leylaKapi.github.io/blog/2014/08/01/integration-git-flow-on-rubymine</id>
    <content type="html"><![CDATA[<h3>How to integration git-flow on Rubymine ?</h3>

<ul>
<li>Firstly you should start to rubymine ide on your computer with <code>./rubymine.sh</code> then,</li>
<li>You can open <code>Help</code> in  nav-bar of rubymine, <code>find-action</code> or <code>ctrl+shift+A</code> then you should search <code>plugins</code>.</li>
<li>Open plugins of rubymine then search again <code>git-flow</code> , if you saw &lsquo;click on Browser&rsquo;,
click then search again in search bar to <code>git-flow</code>, Then you ca find easily integrate on <code>Rubymine</code> ,
then <em>restart rubymine</em> .</li>
</ul>


<p>That' s all.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Useful gems]]></title>
    <link href="http://leylaKapi.github.io/blog/2014/07/13/when-you-start-to-project/"/>
    <updated>2014-07-13T13:58:15+03:00</updated>
    <id>http://leylaKapi.github.io/blog/2014/07/13/when-you-start-to-project</id>
    <content type="html"><![CDATA[<h3>When you start to project, which gems are useful ?</h3>

<p>When you start a rails project, you can use these gems which useful for project.</p>

<p>Gems are like,</p>

<ul>
<li><a href="https://rubygems.org/gems/blankable">blankable</a></li>
<li><a href="https://rubygems.org/gems/simple_form">simple_form</a></li>
<li><a href="https://rubygems.org/gems/model_to_locale">model_to_locale</a></li>
<li><a href="https://rubygems.org/gems/responders">responders</a></li>
<li><a href="https://rubygems.org/gems/will_paginate">will_paginate</a></li>
<li><a href="https://rubygems.org/gems/will_paginate-bootstrap">will_paginate_bootstrap</a></li>
<li><a href="https://rubygems.org/gems/better_errors">better_errors</a></li>
</ul>


<p>1- <strong>blankable gem</strong></p>

<p><code>blankable</code> provide to add blank slates to index view &hellip;
You can look on <a href="https://github.com/lab2023/blankable">gitHub</a></p>

<p>2- <strong>simple_form</strong></p>

<p><code>simple_form</code> provide to make easy rails forms, aims is that to be as flexible as possible
while helping you with powerful components to create your form &hellip; You can look on <a href="https://github.com/plataformatec/simple_form">gitHub</a></p>

<p>3- <strong>model_to_locale</strong></p>

<p><code>model_to_locale</code> provide to create locale file for model attributes &hellip;
You can look on <a href="https://github.com/lab2023/model_to_locale">gitHub</a></p>

<p>4- <strong>responders</strong></p>

<p><code>responders</code> provide to dry up your Rails 3.2+ app &hellip;
You can look on <a href="https://github.com/plataformatec/responders">gitHub</a></p>

<p>5- <strong>will_paginate</strong></p>

<p><code>will_paginate</code> provide to pagination library that integrate with RoR, Sinatra &hellip;
You can look on <a href="https://github.com/mislav/will_paginate">gitHub</a></p>

<p>6- <strong>will_paginate_bootstrap</strong></p>

<p><code>will_paginate_bootstrap</code> provide to integrate in <code>will_paginate</code> to <code>bootstrap</code> &hellip;
You can look on <a href="https://github.com/bootstrap-ruby/will_paginate-bootstrap">gitHub</a></p>

<p>7- <strong>better_errors</strong></p>

<p><code>better_errors</code> provide to replace standard error page to much better and useful error page
You can look on <a href="https://github.com/charliesome/better_errorss">gitHub</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to make a release ?]]></title>
    <link href="http://leylaKapi.github.io/blog/2014/07/10/how-to-make-a-release/"/>
    <updated>2014-07-10T19:01:26+03:00</updated>
    <id>http://leylaKapi.github.io/blog/2014/07/10/how-to-make-a-release</id>
    <content type="html"><![CDATA[<p>Make a release</p>

<p>When you start to make a release, I think if you look at your commit it can be better</p>

<p><code>bash
git log
</code>
then if you make some wrong commit, you can delete wrong commit with</p>

<p><code>bash
git rebase -i HEAD~2
</code>
command.
Then,</p>

<p><code>bash
git push origin +develop
</code></p>

<p>After that, you can check you branch with</p>

<p><code>bash
git branch -a
</code>
then let&rsquo;s start to release ;</p>

<p><code>bash
git flow release start your_version_number
</code>
<code>your_version_number</code> can be like <code>0.1.0</code> . Actually can be like</p>

<p><code>bash
git flow release start 0.1.0
</code>
When we write this command, you can create <code>VERSION.txt</code> file, and open &lsquo;txt&rsquo; file
then write some number with <code>your_version_number</code></p>

<p>Write with order below commands,</p>

<p><code>bash
git add .
git commit -m "Bump version 'your_version_number'"
</code></p>

<p><code>bash
git flow release finish 0.1.0
</code></p>

<p><code>bash
git checkout release/0.1.0
</code></p>

<p><code>bash
git push origin develop
</code></p>

<p><code>bash
git push origin +master
</code></p>

<p>Yep, Now you made a release you can check on your repo settings on <a href="https://github.com/">github</a>.</p>

<p>Let' s add Tag,</p>

<p><code>bash
git tag
</code>
<code>bash
git push --tags
</code></p>

<p>That' s all.
I hope help to you.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Remove log and idea files on your Rails Project]]></title>
    <link href="http://leylaKapi.github.io/blog/2014/07/08/remove-log-and-idea-files-on-your-rails-project/"/>
    <updated>2014-07-08T01:53:53+03:00</updated>
    <id>http://leylaKapi.github.io/blog/2014/07/08/remove-log-and-idea-files-on-your-rails-project</id>
    <content type="html"><![CDATA[<h3>How to remove log and idea files on your project ?</h3>

<p>Remove idea files</p>

<p><code>bash
git rm -r --cached .idea
</code>
While you were remove, terminal gives error about it, you can try to below command :</p>

<p><code>bash
git rm -rf --cached .idea
</code>
Remove log files</p>

<p><code>bash
git rm -r log/development.log
</code></p>

<p>After that, you should include on your <code>.gitignore</code> file like;</p>

<p><code>bash
echo '*log' &gt; .gitignore
</code></p>

<p>That&rsquo;s all.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git Stash]]></title>
    <link href="http://leylaKapi.github.io/blog/2014/07/06/git-stash/"/>
    <updated>2014-07-06T19:12:29+03:00</updated>
    <id>http://leylaKapi.github.io/blog/2014/07/06/git-stash</id>
    <content type="html"><![CDATA[<h3>Command of Git Stash</h3>

<p>Thanks to <code>git stash</code>, provide to stash the changes in a dirty working directory away.</p>

<p><code>bash
git stash
</code></p>

<p><code>bash
git flow feature start your_feature_name
</code></p>

<p><code>bash
git stash pop  // move to your_feature_name
</code></p>

<p><code>bash
git stash list
</code></p>

<p><code>bash
git stash drop
</code></p>

<p><code>bash
git stash branch
</code></p>

<p>That&rsquo;s all.
I hope helped to you.</p>
]]></content>
  </entry>
  
</feed>
