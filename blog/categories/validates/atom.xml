<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: validates | Leyla's Blog]]></title>
  <link href="http://leylaKapi.github.io/blog/categories/validates/atom.xml" rel="self"/>
  <link href="http://leylaKapi.github.io/"/>
  <updated>2014-05-04T21:33:37+03:00</updated>
  <id>http://leylaKapi.github.io/</id>
  <author>
    <name><![CDATA[Leyla Kapi]]></name>
    <email><![CDATA[leylakapi@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Validation methods]]></title>
    <link href="http://leylaKapi.github.io/blog/2014/05/04/validation-methods/"/>
    <updated>2014-05-04T20:39:52+03:00</updated>
    <id>http://leylaKapi.github.io/blog/2014/05/04/validation-methods</id>
    <content type="html"><![CDATA[<h3>Ruby on Rails Validation methods</h3>

<ul>
<li><p><strong>validates_presence_of</strong></p>

<p>   Attribute mustn&rsquo;t be blank(nil,false,[],{})</p>

<p>   <code>
      validates_presence_of :field_name
  </code></p></li>
<li><p><strong>validates_length_of</strong></p>

<p>  Attribute must meet length requirements
  :is, :minimum, :maximum, :within, :in, :too_short, :too_long
  <code>
      validates_length_of :field_name, :minimum =&gt; 100
     </code></p></li>
<li><p><strong>validates_numericality_of</strong></p>

<p>  Attribute must be integer or floating number
  :less_than, :greater_than, :equal_to, :odd, :even, :greater_than_or_equal_to</p>

<p>  <code>
  validates_numericality_of :field_name, :greater_than_or_equal_to =&gt; 5
 </code></p></li>
<li><p><strong>validates_inclusion_of</strong></p>

<p>  Attribute must be in a list of choises. (array or range)
  :in</p></li>
<li><p><strong>validates_exclusion_of</strong></p>

<p>  Attribute mustn&rsquo;t be in a list of choises. (array or range)
  :in</p></li>
<li><p><strong>validates_format_of</strong></p>

<p>  Attribute must match a regular expression.
   :with</p></li>
<li><p>validates_uniqueness_of</p>

<p>  Attribute mustn&rsquo;t exist in the database
  :case_sensitive
  :scope</p></li>
<li><p><strong>validates_acceptance_of</strong></p>

<p>  Attribute must be accepted
  :accept(expected value, 1)</p></li>
<li><p><strong>validates_confirmation_of</strong></p>

<p>  Attribute must be confirmed by entering it twice creates a virtual blank attribute for confirmation.</p></li>
<li><p><strong>validates_associated</strong></p>

<p>  Associated object or objects must all be valid.</p></li>
</ul>


<p>```
:allow_nil => true</p>

<pre><code>#Skip valid if attribute is nil
</code></pre>

<p>:allow_blank => true</p>

<pre><code>#Skip valid if attribute is blank
</code></pre>

<p>```</p>

<p>Example of Validations</p>

<pre><code>validates_presence_of :user_name
validates_length_of :user_name, :maximum =&gt; 50
validates_uniqueness_of :user_name
</code></pre>

<p>When we use like above, We diverge to DRY, instead of above</p>

<pre><code>validates :user_name, :presence =&gt; true
                      :length =&gt; {:maximum =&gt; 50}
                      :uniqueness =&gt; true
</code></pre>

<p>That&rsquo;s all.</p>
]]></content>
  </entry>
  
</feed>
