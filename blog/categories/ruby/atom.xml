<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ruby | Leyla's Blog]]></title>
  <link href="http://leylaKapi.github.io/blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://leylaKapi.github.io/"/>
  <updated>2014-08-09T13:28:01+03:00</updated>
  <id>http://leylaKapi.github.io/</id>
  <author>
    <name><![CDATA[Leyla Kapi]]></name>
    <email><![CDATA[leylakapi@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Fix rake db:populate]]></title>
    <link href="http://leylaKapi.github.io/blog/2014/08/08/fix-rake-db-populate/"/>
    <updated>2014-08-08T10:33:06+03:00</updated>
    <id>http://leylaKapi.github.io/blog/2014/08/08/fix-rake-db-populate</id>
    <content type="html"><![CDATA[<h3><code>Rake aborted! Don't know how to build task 'populate'</code></h3>

<p><code>bash
$ rake db:populate
</code>
or</p>

<p><code>bash
$ bundle exec rake db:populate
</code></p>

<p>While you were writing above command, you get errors like <code>Don't know how to build task 'populate'</code>.</p>

<p>Let&rsquo;s fix,</p>

<p>Firstly, you should check</p>

<p><code>ruby
lib/tasks/sample_data.rb
</code>
&ndash; if this file exist, you should rename this file</p>

<p><code>ruby
sample_data.rake
</code>
then try to run tour rails project.</p>

<ul>
<li>if not exist, you should create new file in <code>lib/tasks</code> directory, <code>sample_data.rake</code>.</li>
</ul>


<p>That' s all.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Integration git-flow on Rubymine]]></title>
    <link href="http://leylaKapi.github.io/blog/2014/08/01/integration-git-flow-on-rubymine/"/>
    <updated>2014-08-01T23:02:42+03:00</updated>
    <id>http://leylaKapi.github.io/blog/2014/08/01/integration-git-flow-on-rubymine</id>
    <content type="html"><![CDATA[<h3>How to integration git-flow on Rubymine ?</h3>

<ul>
<li>Firstly you should start to rubymine ide on your computer with <code>./rubymine.sh</code> then,</li>
<li>You can open <code>Help</code> in  nav-bar of rubymine, <code>find-action</code> or <code>ctrl+shift+A</code> then you should search <code>plugins</code>.</li>
<li>Open plugins of rubymine then search again <code>git-flow</code> , if you saw &lsquo;click on Browser&rsquo;,
click then search again in search bar to <code>git-flow</code>, Then you ca find easily integrate on <code>Rubymine</code> ,
then <em>restart rubymine</em> .</li>
</ul>


<p>That' s all.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Add simple search form to rails projects]]></title>
    <link href="http://leylaKapi.github.io/blog/2014/07/16/add-search-form-to-rails-projects/"/>
    <updated>2014-07-16T19:47:15+03:00</updated>
    <id>http://leylaKapi.github.io/blog/2014/07/16/add-search-form-to-rails-projects</id>
    <content type="html"><![CDATA[<h3>How can you add simple search form to rails project ?</h3>

<p>You want to add search form, but you don&rsquo;t no.  <em>HOW?</em></p>

<p>Let&rsquo;s start, firstly you should use <a href="https://github.com/activerecord-hackery/ransack">ransack</a> and
<a href="https://github.com/mislav/will_paginate">will_paginate</a> gems in your <code>Gemfile</code> then you should write in
terminal <code>bundle</code> .</p>

<p>Then open controller which you want to add search bar, like ;</p>

<p><code>projects_controller</code></p>

<p>```ruby
def index</p>

<pre><code>@search = Project.search(params[:q])
@project = @search.result(distinct: true).paginate(:page =&gt; params[:page])
respond_with @project
</code></pre>

<p>end
```</p>

<p>When you added controller, you should add below code which relation to index file ;</p>

<p><code>projects/index.html.haml</code></p>

<p>```haml
= search_form_for @search do |f|</p>

<pre><code>= f.label :name_cont
= f.search_field :name_cont
= f.submit
</code></pre>

<p>```</p>

<p>That&rsquo;s all .</p>

<p>I hope helped to you .</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Validation methods]]></title>
    <link href="http://leylaKapi.github.io/blog/2014/05/04/validation-methods/"/>
    <updated>2014-05-04T20:39:52+03:00</updated>
    <id>http://leylaKapi.github.io/blog/2014/05/04/validation-methods</id>
    <content type="html"><![CDATA[<h3>Ruby on Rails Validation methods</h3>

<ul>
<li><strong>validates_presence_of</strong></li>
</ul>


<p>Attribute mustn&rsquo;t be blank(nil,false,[],{})</p>

<p><code>ruby
validates_presence_of :field_name
</code></p>

<ul>
<li><strong>validates_length_of</strong></li>
</ul>


<p>Attribute must meet length requirements :is, :minimum, :maximum, :within, :in, :too_short, :too_long</p>

<p><code>ruby
validates_length_of :field_name, :minimum =&gt; 100
</code></p>

<ul>
<li><strong>validates_numericality_of</strong></li>
</ul>


<p>Attribute must be integer or floating number :less_than, :greater_than, :equal_to, :odd, :even, :greater_than_or_equal_to</p>

<p><code>ruby
validates_numericality_of :field_name, :greater_than_or_equal_to =&gt; 5
</code></p>

<ul>
<li><strong>validates_inclusion_of</strong></li>
</ul>


<p>Attribute must be in a list of choises. (array or range) :in</p>

<ul>
<li><strong>validates_exclusion_of</strong></li>
</ul>


<p>Attribute mustn&rsquo;t be in a list of choises. (array or range) :in</p>

<ul>
<li><strong>validates_format_of</strong></li>
</ul>


<p>Attribute must match a regular expression. :with</p>

<ul>
<li><strong>validates_uniqueness_of</strong></li>
</ul>


<p>Attribute mustn&rsquo;t exist in the database :case_sensitive, :scope</p>

<ul>
<li><strong>validates_acceptance_of</strong></li>
</ul>


<p>Attribute must be accepted :accept(expected value, 1)</p>

<ul>
<li><strong>validates_confirmation_of</strong></li>
</ul>


<p>Attribute must be confirmed by entering it twice creates a virtual blank attribute for confirmation.</p>

<ul>
<li><strong>validates_associated</strong></li>
</ul>


<p>Associated object or objects must all be valid.</p>

<p>``` ruby
:allow_nil => true</p>

<h1>Skip valid if attribute is nil</h1>

<p>:allow_blank => true</p>

<h1>Skip valid if attribute is blank</h1>

<p>```</p>

<p>Example of Validations</p>

<p><code>ruby
validates_presence_of :user_name
validates_length_of :user_name, :maximum =&gt; 50
validates_uniqueness_of :user_name
</code></p>

<p>When we use like above, We diverge to DRY, instead of above</p>

<p>``` ruby
validates :user_name, :presence => true</p>

<pre><code>                 :length =&gt; {:maximum =&gt; 50}
                 :uniqueness =&gt; true
</code></pre>

<p>```</p>

<p>That&rsquo;s all.</p>
]]></content>
  </entry>
  
</feed>
